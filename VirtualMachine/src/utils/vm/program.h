#ifndef _PROGRAM_H_
#define _PROGRAM_H_

						// byte code				// PROGRAM
						
uint8_t program[] = { 	
						0x00, LD, 	0x00, 0x00,		// LD	X0
						0x00, AND, 	0x00, 0x01, 	// AND	X1
						0x00, LD, 	0x00, 0x02,		// LD	X2
						0x00, AND, 	0x00, 0x03, 	// AND	X3
						0x00, ORB, 					// ORB
						0x00, OUT, 	0x00, 0x00, 	// OUT	Y0						
						0x00, END, 					// END
					};
	

/* 				
uint8_t program[] = { 	
						0x00, LD, 	0x00, 0x00,		// LD	X0
						0x00, OR,	0x00, 0x01, 	// OR	X1
						0x00, LD, 	0x00, 0x02,		// LD	X2
						0x00, AND, 	0x00, 0x03, 	// AND	X3
						0x00, LDI, 	0x00, 0x04,		// LDI 	X4
						0x00, AND, 	0x00, 0x05, 	// AND	X5
						0x00, ORB, 					// ORB 	
						0x00, OR, 	0x00, 0x06, 	// OR	X6
						0x00, ANB, 					// ANB 	
						0x00, OR, 	0x00, 0x07, 	// OR	X7
						0x00, OUT, 	0x00, 0x00, 	// OUT	Y0						
						0x00, END, 					// END
					};
*/
/* 
 uint8_t program[] = { 	
						0x00, LD, 	0x00, 0x00,		// LD	X0
						0x00, MCS, 					// MCS
						0x00, LD, 	0x00, 0x01,		// LD	X1
						0x00, OUT, 	0x00, 0x00, 	// OUT	Y0
						0x00, LD, 	0x00, 0x02,		// LD	X2
						0x00, MCS, 					// MCS
						0x00, LD, 	0x00, 0x04,		// LD	X4
						0x00, OUT, 	0x00, 0x01, 	// OUT	Y1
						0x00, LD, 	0x00, 0x03,		// LD	X3
						0x00, OUT, 	0x00, 0x02, 	// OUT	Y2
						0x00, MCR, 					// MCR
						0x00, LD, 	0x00, 0x05,		// LD	X5
						0x00, OUT, 	0x00, 0x03, 	// OUT	Y3
						0x00, MCR, 					// MCR
						0x00, END, 					// END
 };
*/

/*  uint8_t program[] = {
						0x00, LD, 	0x00, 0x00,		// LD	X0
						0x00, AND, 	0x00, 0x01, 	// AND	X1
						0x00, LD, 	0x00, 0x02,		// LD	X2
						0x00, AND, 	0x00, 0x03, 	// AND	X3
						0x00, ORB, 					// ORB
						0x00, MCS, 					// MCS
						0x00, LD, 	0x00, 0x04,		// LD	X4
						0x00, AND, 	0x00, 0x05, 	// AND	X5
						0x00, OUT, 	0x00, 0x00, 	// OUT	Y0
						0x00, LD, 	0x00, 0x06,		// LD	X6
						0x00, AND, 	0x00, 0x07, 	// AND	X7
						0x00, OUT, 	0x00, 0x01, 	// OUT	Y1
						0x00, MCR, 					// MCR
						0x00, END, 					// END						
 }; */
 /* 
  uint8_t program[] = {
						0x00, LD, 	0x00, 0x00,		// LD	X0
						0x00, AND, 	0x00, 0x01, 	// AND	X1
						0x00, LD, 	0x00, 0x02,		// LD	X2
						0x00, AND, 	0x00, 0x03, 	// AND	X3
						0x00, ORB, 					// ORB
						0x00, MCS, 					// MCS
						0x00, LD, 	0x00, 0x04,		// LD	X4
						0x00, AND, 	0x00, 0x05, 	// AND	X5
						0x00, MCS, 					// MCS
						0x00, OUT, 	0x00, 0x00, 	// OUT	Y0
						0x00, LD, 	0x00, 0x06,		// LD	X6
						0x00, LD, 	0x00, 0x08,		// LD	X8
						0x00, OR, 	0x00, 0x09, 	// OR	X9
						0x00, ANB, 					// ANB 	
						0x00, OUT, 	0x00, 0x01, 	// OUT	Y1
						0x00, OUT, 	0x00, 0x02, 	// OUT	Y2
						0x00, MCR, 					// MCR
						0x00, LD, 	0x00, 0x07, 	// LD	X7
						0x00, OUT, 	0x00, 0x03, 	// OUT	Y3
						0x00, MCR, 					// MCR
						0x00, END, 					// END						
 };
  */

#endif